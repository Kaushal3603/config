#
# This is a Flox environment manifest.
# Visit flox.dev/docs/concepts/manifest/
# or see flox-edit(1), manifest.toml(5) for more information.
#
version = 1

# List packages you wish to install in your environment inside
# the `[install]` section.
[install]
eza.pkg-path = "eza"
pnpm.pkg-path = "pnpm"
bat.pkg-path = "bat"
edgedb.pkg-path = "edgedb"
python3.pkg-path = "python3"
coreutils.pkg-path = "coreutils"
parallel.pkg-path = "parallel"
nil.pkg-path = "nil"
nixfmt.pkg-path = "nixfmt"
nixd.pkg-path = "nixd"
deploy-rs.pkg-path = "deploy-rs"
nixos-rebuild.pkg-path = "nixos-rebuild"
nix-index.pkg-path = "nix-index"
go_1_23.pkg-path = "go_1_23"
gh.pkg-path = "gh"
xcpretty.pkg-path = "xcpretty"
htop.pkg-path = "htop"
lsof.pkg-path = "lsof"
fd.pkg-path = "fd"
topgrade.pkg-path = "topgrade"
mkpasswd.pkg-path = "mkpasswd"
# hello.pkg-path = "hello"
# nodejs = { version = "^18.4.2", pkg-path = "nodejs_18" }

# Set environment variables in the `[vars]` section. These variables may not
# reference one another, and are added to the environment without first
# expanding them. They are available for use in the `[profile]` and `[hook]`
# scripts.
[vars]
# message = "Howdy"

# The `hook.on-activate` script is run by the *bash* shell immediately upon
# activating an environment, and will not be invoked if Flox detects that the
# environment has previously been activated. Variables set by the script will
# be inherited by `[profile]` scripts defined below. Note that any stdout
# generated by the script will be redirected to stderr.
[hook]
# on-activate = '''
#   # Set variables, create files and directories
#   venv_dir="$(mktemp -d)"
#   export venv_dir
#
#   # Perform initialization steps, e.g. create a python venv
#   python -m venv "$venv_dir"
# '''

# Scripts defined in the `[profile]` section are *sourced* by *your shell* and
# inherit environment variables set in the `[vars]` section and by `[hook]` scripts.
# The `profile.common` script is sourced by all shells and special care should be
# taken to ensure compatibility with all shells, after which exactly one of
# `profile.{bash,fish,tcsh,zsh}` is sourced by the corresponding shell.
[profile]
# common = '''
#   echo "it's gettin' flox in here"
# '''
# common = '''
# set -x
# echo hello
# '''

# Additional options can be set in the `[options]` section. Refer to
# manifest.toml(5) for a list of available options.
[options]
systems = ["aarch64-darwin", "aarch64-linux", "x86_64-darwin", "x86_64-linux"]
# Uncomment to disable CUDA detection.
cuda-detection = false

[services.goku]
command = "bun ~/src/ts/daemons/goku-watch.ts"

# [services.nikiv.dev]
# command = "cd ~/src/nikiv.dev && bun dev"

# [services.react]
# command = "cd ~/src/test/react && bun dev"
